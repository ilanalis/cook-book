generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL_NON_POOLING")
}

model Recipe {
  id                String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title             String
  description       String?
  createdAt         DateTime?          @default(now()) @map("created_at") @db.Timestamptz(6)
  instructions      String
  ingridients       Json
  userId            String             @map("user_id") @db.Uuid
  recipeIngredients RecipeIngredient[]
  user              User               @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("recipes")
}

model Ingredient {
  id                String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt         DateTime           @default(now()) @map("created_at") @db.Timestamptz(6)
  name              String
  recipeIngredients RecipeIngredient[]

  @@map("ingredients")
}

model RecipeIngredient {
  id           String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt    DateTime   @default(now()) @map("created_at") @db.Timestamptz(6)
  recipeId     String     @map("recipe_id") @db.Uuid
  ingredientId String     @map("ingredient_id") @db.Uuid
  amount       String
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  recipe       Recipe     @relation(fields: [recipeId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("recipe_ingredients")
}

model User {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  username  String
  name      String
  surname   String
  email     String
  recipes   Recipe[]

  @@map("users")
}
